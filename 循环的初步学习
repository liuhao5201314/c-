//顺序结构
//选择结构
//循环结构

//分支语句if switch（选择结构）
//;为空语句
//1.if  else
//a>=18&&a<=28 &&逻辑与
//c语言中由一个分号隔开为一个语句
//else 与最近的if配对，
//
// if (condition)
// {
// return x;
// }
// return y;
//这个函数和if else 相同只是平时不怎么使用会产生误解
//==和=的区别一定要注意
//一般写作5==num这样好识别错误
/*
#include<stdio.h>

int main()
{
	int num = 0;
	while (num <= 100)
	{
		if (num % 2 == 1)
		{
			printf("%d ", num);
		}
		num++;
	}
}
*/
/*
//方法2
#include<stdio.h>

int main()
{
	int i = 1;
	while (i <= 100)
	{
		printf("%d ", i);
		i += 2;
	}
}
*/


//switch语句也叫选择语句多用于选择多分支的情况
//内部多会使用break语句用于跳出语句
/*
#include<stdio.h>

int main()
{
	int day = 0;
	scanf_s("%d", &day);
	switch (day)//必须为整型常量表达式switch里面
	{
		case 1:printf("星期一");
			break;
		case 2:printf("星期二");
			break;
		case 3:printf("星期三");
			break;
		case 4:printf("星期四");
			break;
		case 5:printf("星期五");
			break;
		case 6:printf("星期六");
			break;
		case 7:printf("星期日");
			break;
	}
}
*/

//有时候可以采用下面这样的方式来减少程序的复杂程度
//default 用于case 选择中其他的情况2
//只有遇到break才退出，没有遇到就会执行这个判断case下面的全部语句直到break退出
//continue 继续

/*
#include<stdio.h>
int main()
{
	int day = 0;
	scanf_s("%d", &day);
	switch (day)
	{
	case 1:
	case 2:
	case 3:
	case 4:
	case 5:
		printf("工作日");
		break;
	case 6:
	case 7:
		printf("休息日");
		break;
	default:
		printf("输入错误");
	}
}
*/

//循环语句
//while for
//while 循环结果为真进入循环为假则跳出循环

/*
#include<stdio.h>

int main()
{
	int num = 1;
	while (num <= 10)
	{
		printf("%d ", num);
		num++;
	}
}
*/

//continue 后面的程序就不会执行会返回程序循环开头
//下面这个函数就会进入死循环因为每次continue就会返回while进行判断，只是进行终止本次循环而break则是跳出全部循环
//getchar一个一个字符进行读取//输入一个字符型putchar//输出一个字符型
//getchar是

/*
#include<stdio.h>
int main()
{
	int num = 0;
	while(num<=10)
	{
		num++;
		if (num == 5)
			continue;
		printf("%d ", num);
	}
}
*/


//EOF文件结束标志
