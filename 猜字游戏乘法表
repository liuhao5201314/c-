//求最大值
//
/*
#include<stdio.h>
int main()
{
	int i = 0;
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int max = arr[0];//假设数组最大值为第一个数字
	for (i = 1; i < sz; i++)
	{
		if (max < arr[i])
		{
			max = arr[i];
		}
	}
	printf("%d", max);
}
*/

//乘法口诀表
//这个自己书写的输出没有排序
/*
#include<stdio.h>
int main()
{
	int i = 0;
	int j = 0;
	int sum = 0;
	for (i = 1; i <= 9; i++)
	{
		for (j = 1; j <= 9; j++)
		{
			if (j >= i)
			{
				sum = i * j;
				printf("%d*%d=%d ", i, j, sum);
			}
			printf("\n");
		}
	}
}
*/
/*
#include<stdio.h>
int main()
{
	int i = 0;
	int j = 0;
	for (i = 1; i <= 9; i++)
	{
		for (j = 1; j <= i; j++)//采用i<j这样可以确定每一行的个数空余的就不进行打印
		{
			printf("%d*%d=%-2d ", i, j, i*j);//%2d这样可以保证打印2位可以用于方便数字右对齐，%-2d为左对齐，空余部分的会自动打印空格
		}
		printf("\n");
	}
}
*/


//猜数字游戏；
//电脑运行起来会随机生成一个数字
//人进行猜数字
#include<stdio.h>
#include<stdlib.h>
#include <time.h>

void menu()
{
	printf("****欢迎试玩猜数字游戏****\n");
	printf("****按：1进行游戏试玩*****\n");
	printf("******按：0退出游戏*******\n");
}

void game()
{
	//1.生成随机数
	//2.猜数字
	//rand();生成随机数RAND_MAX(0-32767（ox7fff）)
	//int ret = rand();这样进行的书写随机数为伪随机，每次的随机数字相同解决方法：Use the srand function to seed the pseudorandom-number generator before calling rand.
	//时间戳（一种工具每个时间有一个对应的时间戳）：为当前计算机的时间-计算机的起始时间（1970.1.1.0：0：0），时间时刻在改变生成对应的随机数字NUll空指针
	int ret = 0;
	//配合srand((unsigned)time(NULL));进行使用产生随机数字
	ret = rand() % 100 + 1;//0+m<=rand()%(n-m+1)+m<=n-m+m因此，如要产生[m, n]范围内的随机数num;rand里面的任何一个数字取100模后一定在0-99内
	//产生随机数必须在循环外面，不然每猜一次就变一个数字
	while (1)
	{
		int gass = 0;
		printf("请输入预测数字（0-100）");
		scanf_s("%d", &gass);
		if (gass > ret)
		{
			printf("输入结果过大");
		}
		else if (gass < ret)
		{
			printf("输入结果过小");
		}
		else
		{
			printf("恭喜你猜对了，按1继续游戏，按0结束游戏\n");
			break;
		}
	}
	
}

int main()
{
	int input = 0;
	srand((unsigned)time(NULL));//产生随机数字前的说明，必须带有这一段话那么产生的数字才是真正的随机数字
	do {
		menu();//采用枚举函数定义一个菜单
		printf("请选择：");
		scanf_s("%d", &input);
		switch (input)
		{
		case 1:
			game();//进入猜数字游戏
			break;
		case 0:
			printf("退出游戏\n");
			break;
		default:
			printf("输入错误请按正确输入\n");
			break;
		}
	} while (input);
}
